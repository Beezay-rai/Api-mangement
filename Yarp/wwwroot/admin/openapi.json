{
  "openapi": "3.0.1",
  "info": {
    "title": "One Point Admin API",
    "description": "Admin APIs to configure settings.",
    "termsOfService": "https://www.onepointfinserv.com/",
    "contact": {
      "name": "OnePoint Financial Services",
      "url": "https://www.onepointfinserv.com/",
      "email": "anuj@onepointfinserv.com"
    },
    "license": {
      "name": "OnePoint",
      "url": "https://www.onepointfinserv.com/"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/config": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/uploadFile": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/adminApi": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/clusters": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterConfigModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterConfigModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/clusters/{clusterId}": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutClusterConfigModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutClusterConfigModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutClusterConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutClusterConfigModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutClusterConfigModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutClusterConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/setup/consumer": {
      "post": {
        "tags": [
          "Consumer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Consumer"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/setup/consumer/{consumerId}": {
      "put": {
        "tags": [
          "Consumer"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Consumer"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConsumerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConsumerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConsumerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Consumer"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Consumer"
        ],
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/setup/consumerGroup": {
      "post": {
        "tags": [
          "ConsumerGroup"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "ConsumerGroup"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/setup/consumerGroup/{consumerGroupId}": {
      "put": {
        "tags": [
          "ConsumerGroup"
        ],
        "parameters": [
          {
            "name": "consumerGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "ConsumerGroup"
        ],
        "parameters": [
          {
            "name": "consumerGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerGroupModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "ConsumerGroup"
        ],
        "parameters": [
          {
            "name": "consumerGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ConsumerGroup"
        ],
        "parameters": [
          {
            "name": "consumerGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/credential/basic": {
      "post": {
        "tags": [
          "Credential"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicCredModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicCredModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BasicCredModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/credential/basic/{basicCredId}": {
      "put": {
        "tags": [
          "Credential"
        ],
        "parameters": [
          {
            "name": "basicCredId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicCredModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicCredModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BasicCredModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/connect/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string"
                  },
                  "client_id": {
                    "type": "string"
                  },
                  "client_secret": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "grant_type": {
                  "style": "form"
                },
                "client_id": {
                  "style": "form"
                },
                "client_secret": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/plugin": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "NameSpace": {
                    "type": "string"
                  },
                  "Version": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TimeStamp": {
                    "type": "string"
                  },
                  "DLLFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "NameSpace": {
                  "style": "form"
                },
                "Version": {
                  "style": "form"
                },
                "TimeStamp": {
                  "style": "form"
                },
                "DLLFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Plugin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "NameSpace": {
                    "type": "string"
                  },
                  "Version": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TimeStamp": {
                    "type": "string"
                  },
                  "DLLFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "NameSpace": {
                  "style": "form"
                },
                "Version": {
                  "style": "form"
                },
                "TimeStamp": {
                  "style": "form"
                },
                "DLLFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Plugin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Plugin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "NameSpace": {
                    "type": "string"
                  },
                  "Version": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TimeStamp": {
                    "type": "string"
                  },
                  "DLLFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "NameSpace": {
                  "style": "form"
                },
                "Version": {
                  "style": "form"
                },
                "TimeStamp": {
                  "style": "form"
                },
                "DLLFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/plugin/{pluginId}": {
      "get": {
        "tags": [
          "Plugin"
        ],
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/routes": {
      "post": {
        "tags": [
          "Route"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Route"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/routes/{routeId}": {
      "get": {
        "tags": [
          "Route"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Route"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRouteMdoel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRouteMdoel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRouteMdoel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Route"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRouteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRouteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRouteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Route"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/config/schema/{pluginId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "description": "ID of the plugin for which the schema is being validated.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "A generic object model to be validated."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation succeeded"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed due to errors in the input model",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "title": {
                      "type": "string",
                      "example": "One or more validation errors occurred."
                    },
                    "type": {
                      "type": "string",
                      "example": "https://tools.ietf.org/html/rfc9110#section-15.5.1"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Plugin not found"
          }
        }
      },
      "get": {
        "tags": [
          "Schema"
        ],
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BasicCredModel": {
        "type": "object",
        "properties": {
          "consumerId": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterHttpClientConfigModel": {
        "type": "object",
        "properties": {
          "sslProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dangerousAcceptAnyServerCertificate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateClusterConfigModel": {
        "type": "object",
        "properties": {
          "destinationAddress": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "loadBalancingPolicy": {
            "type": "string",
            "nullable": true
          },
          "httpClient": {
            "$ref": "#/components/schemas/ClusterHttpClientConfigModel"
          }
        },
        "additionalProperties": false
      },
      "CreateConsumerGroupModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateConsumerModel": {
        "required": [
          "consumerGroupId",
          "name"
        ],
        "type": "object",
        "properties": {
          "consumerGroupId": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PatchConsumerModel": {
        "type": "object",
        "properties": {
          "consumerGroupId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchRouteMatchModel": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchRouteModel": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "nullable": true
          },
          "match": {
            "$ref": "#/components/schemas/PatchRouteMatchModel"
          },
          "authorizationPolicy": {
            "type": "string",
            "nullable": true
          },
          "corsPolicy": {
            "type": "string",
            "nullable": true
          },
          "outputCachePolicy": {
            "type": "string",
            "nullable": true
          },
          "rateLimiterPolicy": {
            "type": "string",
            "nullable": true
          },
          "timeoutPolicy": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "transforms": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutClusterConfigModel": {
        "type": "object",
        "properties": {
          "destinationAddress": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "loadBalancingPolicy": {
            "type": "string",
            "nullable": true
          },
          "httpClient": {
            "$ref": "#/components/schemas/ClusterHttpClientConfigModel"
          }
        },
        "additionalProperties": false
      },
      "RouteMatchModel": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouteModel": {
        "required": [
          "clusterId"
        ],
        "type": "object",
        "properties": {
          "clusterId": {
            "minLength": 1,
            "type": "string"
          },
          "match": {
            "$ref": "#/components/schemas/RouteMatchModel"
          },
          "authPolicy": {
            "type": "string",
            "nullable": true
          },
          "corsPolicy": {
            "type": "string",
            "nullable": true
          },
          "rateLimiterPolicy": {
            "type": "string",
            "nullable": true
          },
          "outputCachePolicy": {
            "type": "string",
            "nullable": true
          },
          "timeOutPolicy": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "transforms": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateRouteMdoel": {
        "required": [
          "clusterId"
        ],
        "type": "object",
        "properties": {
          "clusterId": {
            "minLength": 1,
            "type": "string"
          },
          "match": {
            "$ref": "#/components/schemas/RouteMatchModel"
          },
          "authorizationPolicy": {
            "type": "string",
            "nullable": true
          },
          "corsPolicy": {
            "type": "string",
            "nullable": true
          },
          "rateLimiterPolicy": {
            "type": "string",
            "nullable": true
          },
          "timeoutPolicy": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "transforms": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Key based authentication based on resource using various schemes.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}